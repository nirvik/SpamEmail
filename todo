Read all the test_data(need to know what to ignore and what to consider)
	1.Each mail break all the words
	2.Check which category of the words belong to our regex so that it can be truncated
	words like(a , an , the, etc)

Write the necessary regex

link the test_data to the appropritate classifier
(merge the two files)

dict1-> words: SPAM : #occurence
dict2-> words : HAM : #occurence

reading document will be a pain in the ass. Have a standard regular expression. For ex: \n,____,Re:, hey?how(treated as one word). Need separators for that. probably remove '? .'
and consider the words inside a bracket.

use encoding:latin1:because many of the email messages contain non-ASCII characters
