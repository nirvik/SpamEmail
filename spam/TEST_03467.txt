Re: Java graphicsgeneration on Mac servers without graphics hardwareOn Apr 13, 2010, at 1:49 PM, Bill Janssen wrote:

> Stuart Wier <wier@unavco.org> wrote:
>=20
>> It seems that Java on Mac OS X doesn't use X11 (or Xvfb) at all. Is =
it
>> attempting to interact with the quartz/Cocoa/Aqua window framework?
>=20
> Yes.  The X server is completely secondary, and I don't think Apple =
Java
> interacts with it at all.
>=20
>> It seems not particularly interested in whether or not an X server is
>> available or the DISPLAY variable is set or whether you've tunneled X
>> through SSH.
>=20
> Right.
>=20
>> Is there is a way to run Java graphics generation on the Mac 10.6
>> server without a graphics display?  I need to know so I can move
>> forward in some other way.  Rewriting the program is not an option.
>> "headless=3Dtrue" is not a help since the program needs to run just =
as
>> if it had graphics.
>=20
> If you are using AWT, you need to give your program access to the
> console.  Apple uses a Mach-involved security model of namespaces to
> control access to various things; you can find more information on it =
at
> http://developer.apple.com/mac/library/technotes/tn2005/tn2083.html.
> Worth reading.  Several times.
>=20
> But the pertinent bit is ``A process can only use the global window
> server service if its EUID is 0 (it's running as root) or matches the
> UID of the console user. All other users are barred from using it.''
>=20
> I don't see an update of this document for 10.6, either.
>=20
>> How can I set up things so that graphics generation proceeds and =
makes
>> image files as if graphics hardware were available?   The program is
>> designed to do this using X, either with X11 with graphics hardware,
>> or with Xvfb.
>=20
> You could try installing another Java that includes a client Xlib
> implementation, and go from there.  Or, of course, run your program on
> Linux or FreeBSD or OpenSolaris instead.

No version of Java for Mac OS X provided by Apple has X11 support. Third =
party JVMs like SoyLatte and OpenJDK do however (it's their only AWT =
support).

We do have feature requests to add X11 support, however it's a very =
large change that would need careful thought put into how to integrate =
side-by-side support and how to switch between the two toolkits. If such =
a change were to be integrated, it would likely only happen in a major =
Java version bring-up.

Regards,
Mike Swingler
Java Runtime Engineer
Apple Inc.=
 _______________________________________________
Do not post admin requests to the list. They will be ignored.
Java-dev mailing list      (Java-dev@lists.apple.com)
Help/Unsubscribe/Update your Subscription:
http://lists.apple.com/mailman/options/java-dev/mlsubscriber.tech%40csmining.org

This email sent to mlsubscriber.tech@csmining.org

